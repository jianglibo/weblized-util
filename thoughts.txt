mysql -e  -e "show variables like '%con%'"

mysql --help --verbose
Default options are read from the following files in the given order:
C:\WINDOWS\my.ini C:\WINDOWS\my.cnf C:\my.ini C:\my.cnf C:\wamp64\bin\mysql\mysql5.7.14\my.ini C:\wamp64\bin\mysql\mysql5.7.14\my.cnf

install mysql:
https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/

curl -OL https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm

sudo rpm -Uvh platform-and-version-specific-package-name.rpm

sudo yum-config-manager --disable mysql57-community
sudo yum-config-manager --enable mysql56-community

yum repolist enabled | grep mysql
sudo yum install mysql-community-server

for 5.6:
mysql_secure_installation

systemctl start mysqld


 /etc/yum.repos.d/mysql-community.repo enable5.6
 
 我想对目标服务器的情况了解多少呢？
1、剩余磁盘空间
2、CUP负荷
3、borgdownloadstatus, 

powershell remote.
##########################################
#Show list of current WinRM Trusted Hosts#
##########################################

Get-Item WSMan:\localhost\Client\TrustedHosts

#########################
#Set WinRM Trusted Hosts#
#########################

Set-Item WSMan:\localhost\Client\TrustedHosts -Value 'machineA'
#OR
Set-Item WSMan:\localhost\Client\TrustedHosts -Value 'machineA,machineB'

##############################################
#Append (add to) existing WinRM Trusted Hosts#
##############################################

Set-Item WSMan:\localhost\Client\TrustedHosts -Value 'machineB' -Concatenate
#OR
Set-Item WSMan:\localhost\Client\TrustedHosts -Value 'machineB,machineC' -Concatenate

1.在服务端执行：Enable-PSRemoting
2.在客户端执行如下命令，将IP为192.168.1.*的主机都加入信任列表
Set-Item wsman:\localhost\Client\TrustedHosts -value 192.168.1.*
3.执行下面命令进行重新链接服务器
Enter-PSSession 192.168.1.112 -Credential sa\administrator

$session = New-PSSession -ComputerName 172.19.253.244 -Credential 172.19.253.244\Administrator
Copy-Item -Path .\Vagrantfile -Destination d:\ -ToSession $session

read-host -assecurestring | convertfrom-securestring | out-file C:\cred.txt
$password = get-content C:\cred.txt | convertto-securestring
$credentials = new-object -typename System.Management.Automation.PSCredential -argumentlist "myusername",$pass

# .NET framework version.
[System.Runtime.InteropServices.RuntimeInformation]::get_FrameworkDescription()